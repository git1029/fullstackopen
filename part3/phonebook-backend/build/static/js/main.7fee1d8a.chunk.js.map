{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","props","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","removePerson","map","person","name","number","onClick","Notification","message","messageStyle","color","background","fontSize","borderRadius","borderStyle","borderColor","borderWidth","padding","marginBottom","className","style","text","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","personsToShow","toUpperCase","includes","event","target","preventDefault","length","window","alert","personObject","find","p","confirm","updatedPerson","returnedPerson","setTimeout","catch","error","status","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fee1d8a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst exportObject = { getAll, create, update, remove }\nexport default exportObject","import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <div>\n    filter shown with <input \n      value={filter}\n      onChange={handleFilterChange}\n    />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  const { \n    addPerson, \n    newName, \n    handleNameChange, \n    newNumber, \n    handleNumberChange \n  } = props\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input \n          value={newName}\n          onChange={handleNameChange} \n        />\n      </div>\n      <div>\n        number: <input \n          value={newNumber}\n          onChange={handleNumberChange} \n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, removePerson }) => (\n  <>\n    {persons.map(person =>\n      <div key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => removePerson(person.id)}>\n          delete\n        </button>\n      </div>  \n    )}\n  </>\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  const messageStyle = {\n    color: message.type === 'error' ? 'red' : 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderColor: message.type === 'error' ? 'red' : 'green',\n    borderWidth: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  \n  return (\n    <div className={message.type} style={messageStyle}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    // Prevent empty entries\n    if (newName.length === 0) {\n      return window.alert('Name cannot be blank')\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    // Check for existing entry\n    const person = persons.find(p => \n      p.name.toUpperCase() === newName.toUpperCase())\n\n    // If exists confirm number update\n    if (person) {\n      const confirmUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if (!confirmUpdate) return\n\n      const updatedPerson = {\n        ...person,\n        number: newNumber\n      }\n\n      return personService\n        .update(person.id, updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => \n            p.id === person.id ? returnedPerson : p))\n          setMessage({\n            type: 'success',\n            text: `Information for ${returnedPerson.name} updated successfully`\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {          \n          if (error.response.status === 400) {\n            setMessage({\n              type: 'error',\n              text: error.response.data.error\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          }\n          else if (error.response.status === 404) {\n            setMessage({\n              type: 'error',\n              text: `Information for for ${updatedPerson.name} has already been removed from server`\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== person.id))\n          }\n          else {\n            setMessage({\n              type: 'error',\n              text: 'Oops, something went wrong'\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          }\n        })\n    }\n\n    // If new create entry\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage({\n          type: 'success',\n          text: `Added ${returnedPerson.name}`\n        })\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage({\n          type: 'error',\n          text: error.response.data.error\n        })\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const removePerson = (id) => {\n    const personToRemove = persons.find(p => p.id === id)\n    \n    const confirmRemove = window.confirm(`Delete ${personToRemove.name}?`)\n\n    if (confirmRemove) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(error => {\n          setMessage({\n            type: 'error',\n            text: `${personToRemove.name} already removed from server`\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = filter === ''\n    ? persons\n    : persons.filter(person => \n        person.name\n          .toUpperCase()\n          .includes(filter.toUpperCase())\n      )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} />\n      \n      <Filter \n        filter={filter} \n        handleFilterChange={handleFilterChange} \n      />\n\n      <h2>add a new</h2>\n      \n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}